---
title: "Serology data analysis"
author: "James Watson"
format: html
editor: visual
---

```{r preambule}
knitr::opts_chunk$set(cache = F, cache.comments = FALSE,
                      echo = F, include = TRUE, 
                      fig.width = 8, fig.height = 8,
                      fig.pos = 'H',dev = 'png', dpi = 300)

```

```{r setup}
library(rstan)
library(tidyverse)
library(kableExtra)
library(finalfit)
library(RColorBrewer)
library(lubridate)
library(brms)
library(gridExtra)
library(survival)
library(survminer)

## information on software/hardware used
version
sessionInfo()

rstan_options(auto_write = TRUE)
## parameters for the analysis

my_probs = c(0.025, 0.1, .5, .9, .975)
source('functions.R')
source('Data_curation/user_settings.R')
trt_colors = get_trt_colors()
```

All paths are local

## Load data

```{r}
dat_sero_estimated = read_csv('Analysis_Data/Serology_estimated.csv')
dat_sero_estimated = dat_sero_estimated%>%filter(!(SE_IgG>0.2 & Mean_log_IgG>-2))
dat = read_csv('Analysis_Data/interim_all_analysis.csv')
dat = dat%>% distinct(ID, .keep_all = T)%>% select(ID, Trt, Rand_date)
slopes = read_csv('Analysis_Data/slope.csv')[, c('ID', "slope_med", "slope_up", "slope_low")]
```


```{r serology_plots}
sero_dat = dat_sero_estimated %>%
  filter(!is.na(log10_IgG), !is.na(Mean_log_IgG)) %>% group_by(ID) %>%
  mutate(Day = ifelse(Day<=7, Day, 14),
         Baseline_IgG_old = ifelse(sum(Day==0)>0,log10_IgG[Day==0],NA),
         Baseline_IgG_new = ifelse(sum(Day==0)>0,Mean_log_IgG[Day==0],NA)) %>%
  group_by(ID, Day) %>%
  mutate(Delta_IgG_old = log10_IgG-Baseline_IgG_old,
         Delta_IgG_new = log10_IgG-Baseline_IgG_new) %>%
  ungroup%>%
  select(ID, Day, log10_IgG, Mean_log_IgG)
sero_dat = merge(sero_dat, dat, by ='ID')
sero_wide =
  sero_dat %>% pivot_wider(names_from = Day,
                           id_cols = c(ID, Trt, Rand_date),
                           values_from = c(Mean_log_IgG,log10_IgG),
                           values_fn = mean)
sero_dat = merge(slopes, sero_dat, by='ID', all.y = F)
sero_wide = merge(slopes, sero_wide, by='ID', all.y = F)
sero_wide = sero_wide %>% filter(!Trt %in% c('Evusheld','Regeneron'))


g1=sero_wide %>% ggplot(aes(x=Rand_date,
                            y=log10_IgG_0,
                            col=Trt)) +
  theme_classic()+
  geom_point() + scale_color_manual(values = trt_colors)+
  labs(x = "Randomisation date", y = 'Log10 IgG on day 0')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")

g1_new=sero_wide %>% ggplot(aes(x=Rand_date,
                            y=Mean_log_IgG_0,
                            col=Trt)) +
  theme_classic()+
  geom_point() + scale_color_manual(values = trt_colors)+
  labs(x = "Randomisation date", y = 'Log10 IgG on day 0')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")

g11 = sero_wide %>% ggplot(aes(x=Rand_date, y=slope_median, col=Trt)) + geom_point()+ scale_color_manual(values = trt_colors)+
  theme_classic()+
  labs(x = "Randomisation date", y = 'Slope')+
  geom_smooth(data = subset(sero_wide,Trt=='No study drug'),
              method = mgcv::gam, formula = y~s(x),
              se = T, color = trt_colors['No study drug']) +
  geom_smooth(data = subset(sero_wide,Trt=='Nirmatrelvir'),
              method = mgcv::gam, formula = y~s(x),
              se = T, color =  trt_colors['Nirmatrelvir'])+
  ylim(-2.5, 0)+
  theme(legend.position="none")
grid.arrange(g1, g11)

g2=sero_wide %>% filter(Rand_date < '2022-02-01') %>%
  ggplot(aes(x=log10_IgG_3,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 3", 
       y = 'Slope', 
       title = 'Before Feb 2022')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")

g3=sero_wide %>% filter(Rand_date >= '2022-02-01',
                        Rand_date < '2023-02-01') %>%
  ggplot(aes(x=log10_IgG_3,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 3", 
       y = 'Slope', 
       title = 'Feb 2022 to Feb 2023')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")

g4=sero_wide %>% filter(Rand_date >= '2023-02-01') %>%
  ggplot(aes(x=log10_IgG_3,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 3", 
       y = 'Slope', 
       title = 'After Feb 2023')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")

g2
g3
g4
gridExtra::grid.arrange(g2, g3, g4)


mod_all =
  lm(slope_median ~ Baseline_IgG + log10_IgG_3 + log10_IgG_7 + log10_IgG_14,
     data = sero_wide %>% filter(log10_IgG_14 >2))
summary(mod_all)


sero_wide  %>% filter(log10_IgG_14 >2) %>%
  ggplot(aes(x=log10_IgG_14,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 14", 
       y = 'Slope', 
       title = 'All')+
  geom_smooth(method = lm, formula = y~x,
              se = T, color = "black")


par(las=1, cex.lab=1.4, cex.axis=1.4)
boxplot(log10_IgG ~ Day, xlab = 'Day', ylab = 'Log 10 IgG levels',
        data = sero_dat )
grid()

boxplot(log10_IgG ~ Day, xlab = 'Day', ylab = 'Log 10 IgG levels',
        data = sero_dat %>% filter(Rand_date<'2022-02-01'))
grid()

boxplot(log10_IgG ~ Day, xlab = 'Day', ylab = 'Log 10 IgG levels',
        data = sero_dat %>% filter(Rand_date>'2023-02-01'))
grid()
```

day 14 sero values

```{r day14_sero}
sero_wide %>% ggplot(aes(x=Rand_date,
                         y=log10_IgG_0,
                         col=Trt)) +
  theme_classic()+
  geom_point() + scale_color_manual(values = trt_colors)+
  labs(x = "Randomisation date", y = 'Log10 IgG on day 0')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")

g2=sero_wide %>% filter(Rand_date < '2022-02-01') %>%
  ggplot(aes(x=log10_IgG_14,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 14", 
       y = 'Slope', 
       title = 'Before Feb 2022')+
  geom_smooth(method = lm, formula = y~x,
              se = T, color = "black")

g3=sero_wide %>% filter(Rand_date >= '2022-02-01',
                        Rand_date < '2023-02-01',
                        log10_IgG_14>2) %>%
  ggplot(aes(x=log10_IgG_14,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 3", 
       y = 'Slope', 
       title = 'Feb 2022 to Feb 2023')+
  geom_smooth(method = lm, formula = y~x,
              se = T, color = "black")

g4=sero_wide %>% filter(Rand_date >= '2023-02-01') %>%
  ggplot(aes(x=log10_IgG_14,
             y=slope_median)) +
  geom_point() +   ylim(-2.5, 0)+
  labs(x = "Log10 IgG on day 14", 
       y = 'Slope', 
       title = 'After Feb 2023')+
  geom_smooth(method = lm, formula = y~x,
              se = T, color = "black")

g2
g3
g4

summary(lm(slope_median~log10_IgG_14, data = sero_wide %>% filter(Rand_date < '2022-02-01')))

summary(lm(slope_median~log10_IgG_14, data = sero_wide %>% filter(Rand_date >= '2022-02-01', Rand_date<'2023-02-01', log10_IgG_14>2)))

summary(lm(slope_median~log10_IgG_14, data = sero_wide %>% filter(Rand_date >= '2023-02-01')))
```

Delta IgG

```{r delta_igg}
sero_wide %>% ggplot(aes(x=Rand_date,
                         y=Delta_IgG_14,
                         col=Trt)) +
  theme_classic()+
  geom_point() + scale_color_manual(values = trt_colors)+
  labs(x = "Randomisation date", y = 'Log10 IgG on day 0')+
  geom_smooth(method = mgcv::gam, formula = y~s(x),
              se = T, color = "black")+
  ylim(-1, 2.5)

summary(mgcv::gam(Delta_IgG_14 ~ Trt + log10_IgG_0,
                  data = sero_wide %>% 
                    filter(Site=='th001',
                           Rand_date>'2022-06-06',
                           Trt %in% c('No study drug', 'Nirmatrelvir')
                    )))

summary(mgcv::gam(Delta_IgG_7 ~  Trt + log10_IgG_0,
                  data = sero_wide))

sero_wide %>% ggplot(aes(x=Baseline.viral.load,
                         y=log10_IgG_0,
                         col=Trt)) +
  theme_classic()+
  geom_point() + scale_color_manual(values = trt_colors)+
  labs(x = "Baseline viral load", y = 'Log10 IgG on day 0')+
  geom_smooth(method = lm, formula = y~x,
              se = T, color = "black")+
  ylim(2,6)



sero_wide %>%
  filter(Site=='th001',
         Rand_date>'2022-06-06',
         Trt %in% c('No study drug', 'Nirmatrelvir')) %>%
  ggplot(aes(x=log10_IgG_0,
             y=Delta_IgG_14,
             col=Trt)) +
  theme_classic()+
  geom_point() + scale_color_manual(values = trt_colors)+
  labs(x = "Day 0 IgG", y = 'Delta IgG (day 14)')+
  geom_smooth(method = lm, formula = y~x,
              se = T, color = "black")
```

